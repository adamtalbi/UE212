<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/css" href="securite.xsl"?>

<plan>
  <introdution>
  Pour comprendre l'importance croissante du xml dans le web d'aujourd'hui il faut entre autre s’intéresser aux entreprises adeptes du SOA( service-oriented Architecture), EAI (Entreprise Application Intégration) et Edi(Echange de donnée informatisé). Elles ouvrent de plus en plus leurs infrastructures aux échanges entre partenaire sur internet ce qui par ricochet transforme les échanges de flux en vecteurs qui apportent le virus au cœur du système. Pour s'adapter aux services web un pare-feu xml est nécessaire. Nous allons nous intéresser au fonctionnement de cet outil, à son utilité, sa mise en place, ses avantages et ses défauts. Ensuite nous parlerons des normes de sécurité associées au xml et nous vous ferons découvrir d'autres système de sécurité basé sur XML.
  </introduction>
  <I name="Mise en situation">
    <1 name="Définition">
    Les services web (en anglais web services) représentent un mécanisme de communication entre applications distantes à travers le réseau internet indépendant de tout langage de programmation et de toute plate-forme d'exécution .Ils utilisent le protocole HTTP comme moyen de transport. Ainsi, les communications s'effectuent sur un support universel, maîtrisé et généralement non filtré par les Pare-feux,Ils emploient  une syntaxe basée sur la notation XML  pour décrire les appels de fonctions distantes et les données échangées ; ils organisent les mécanismes d'appel et de réponse.
Grâce aux services web, les applications peuvent être vues comme un ensemble de services métiers, structurés et correctement décrits, dialoguant selon un standard international plutôt qu'un ensemble d'objets et de méthodes entremêlés.
Le premier bénéfice de ce découpage est la facilité de maintenance de l'application, ainsi que l'interopérabilité permettant de modifier facilement un composant (un service) pour le remplacer par un autre, éventuellement développé par un tiers. Qui plus est, les services web permettent de réduire la complexité d'une application car le développeur peut se focaliser sur un service, indépendamment du reste de l'application.
Les services web facilitent non seulement les échanges entre les applications de l'entreprise mais surtout permettent une ouverture vers les autres entreprises. Les premiers fournisseurs de services web sont ainsi les fournisseurs de services en ligne (météo, bourse, planification d'itinéraire, pages jaunes, etc.), mettant à disposition des développeurs des API (Application Programmable Interface) payantes ou non, permettant d'intégrer leur service au sein d'applications tierces.
    </1>
    <A name="Principe de fonctionnement des web-service">
    Le fonctionnement des services web repose sur un modèle en couches, dont les trois couches fondamentales sont les suivantes :
Invocation, visant à décrire la structure des messages échangés par les applications.
Découverte, pour permettre de rechercher et de localiser un service web particulier dans un annuaire de services décrivant le nom de la société, l'objectif de chaque service, etc.
Description, dont l'objectif est la description des interfaces (paramètres des fonctions, types de données) des services web.
Les standards de base utilisés par les Web-Services (SOAP, WSDL) sont normalisés par le W3C (http://www.w3.org/2002/ws/), tandis que l'OASIS est chargée de la standardisation des couches supérieures, plus proches du niveau applicatif (sécurité, etc.).
    
    </A>
    <B name="Sécurisation des services Web">
    Les Web Services ne supportent pas explicitement les mécanismes de sécurité. Aﬁn de sécuriser les Web Services il faudrait commencer par sécuriser l’infrastructure informatique puis sécuriser spécifiquement les Web Services : Pour cela on peut rendre sûres les connexions et les données en utilisant les standards existants. Un pare-feu XML, première brique de cette ligne de défense, se différencie d’un pare-feu traditionnel, ce dernier se révélant être inefficace pour éradiquer les menaces sur les services web.  Un pare-feu XML se déploie en aval du pare-feu traditionnel pour parer à ces vulnérabilités. 
Un pare-feu XML est conçu spécifiquement pour inspecter les flux XML et SOAP (Simple Object Access Protocol) sur protocoles de base HTTP/HTTPS et éventuellement sur des protocoles tiers. 
Le pare-feu XML est déployé en tant que proxy du périmètre réseau : il masque l’adresse des équipements internes et accepte les requêtes vers des points périphériques extérieurs ou “virtuels”. 
Les fonctionnalités de sécurité mises en œuvre se dimensionnent compte tenu du risque d’entreprise. Elles portent notamment sur :
la validation des messages,
l’« obfuscation » des exceptions,
la détection des intrusions,
le routage selon le type de contenu,
la transition de protocoles
la sécurité au niveau de la couche de message.
    </B>
  </I>
  <II name="Sécurité de l'information">
  Le contrôle de l'information est la tache la plus évidente d'un pare feu XML ,Dans ce contexte, le pare-feu XML scrute la syntaxe des messages SOAP (conformité de la structure aux spécifications SOAP 1.2), ainsi que la sémantique transactionnelle et déclarative (autorisation de réponse soumise à différents paramètres). 
Les entreprises adoptent davantage le pare-feu XML pour mieux maîtriser leur degré de vulnérabilité aux spywares, vers, virus et autres programmes malveillants. L’avènement des logiciels malveillants, qui s’immiscent dans les documents SOAP sous forme d’un fichier joint binaire codé en MIME ou en DIME, y est sans doute pour quelque chose. 
Comme pour les protocoles de couche réseau, plus la couche réseau/applicatifs est élevée plus il y a d’information contextuelle à traiter. Au sein de la sphère des services web, cette information se constitue de données détaillées d’entreprise.
Les contrats de services web, disponible publiquement, exposent de plus en plus des données essentielles d’entreprise. Cette donne incite les meilleurs pare-feu XML à aller au-delà des tâches de base et à proposer de nouvelles fonctionnalités : détection de l’utilisation inappropriée des ressources et des privilèges, surveillance des flux d’informations confidentielles et détermination précise des conséquences d’événements en utilisant les techniques d’analyse comportementale ou d’analyse statistique (taux, intensités, seuils et écarts). Nous allons nous intéresser aux principaux standard XML de sécurité

    <A name="Standard XML de sécurité">
      <1 name="XML Signatures">
      XML Signature permet d’intégrer directement dans le document XML la signature et le certificat L’avantage pour les Web Services est que les éléments nécessaires à la sécurité sont inclus dans le document XML. XML Signature est totalement adapté aux Web Services et intègre :
      </1>
      <2 name="XKMS XML Key Management Spécification">
      
      </2>
      <3 name="SAML Security Assertion Markup Language">
      
      </3>
      <4 name="WS-Security">
      Cette spéciﬁcation qui a été proposée à l’origine dans le but de décrire l’ensemble des pratiques de sécurité les plus couramment utilisées. Objectif à terme : élaborer une interface qui assure l’interopérabilité entre solutions de sécurité d’entreprise, reposant sur des technologies hétérogènes.
L’ensemble des méthodes prises en compte WS-Security couvre en premier lieu l’authentiﬁcation de la partie cliente, c’est-à-dire l’émetteur du message SOAP. Dans le cas d’une architecture de Web Services, ce client peut renvoyer à un individu mais également à une application (ou composant) ou encore à une machine. D’où la prise en compte par la spécification de divers mécanismes : le couple identifiant/mot de passe, la méthode du jeton de sécurité et celles des certificats
notamment. "Concrètement, WS-Security définit la manière de décrire au sein d’un message SOAP ,les droits utilisateur correspondant à ces différents systèmes de sécurité". Comment éviter que la connexion entre deux Web Services ne soit "sur écoute" ? Ici, entre en jeu le chiffrement et la gestion de l’intégrité des messages, pour lesquels le langage propose un vocabulaire de gestion de certificats : des outils qui peuvent être utilisés aussi bien pour chiffrer un document électronique que pour le signer.
      </4>
    </A>
  </II>
  <conclusion>
    
  </conclusion>
</plan>